{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\baile\\\\Documents\\\\github clones\\\\toDoList\\\\front-end\\\\src\\\\components\\\\form.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Form(props) {\n  _s();\n  const [author, setAuthor] = useState();\n  const [task, setTask] = useState();\n  const [date, setDate] = useState();\n  async function submitHandler(event) {\n    event.preventDefault();\n    const data = {\n      \"authorName\": author,\n      \"task\": task,\n      \"date\": date\n    };\n    console.log(data);\n    console.log(author);\n    props.setAllTasks(allTasks + 1);\n    const response = await fetch(\"http://localhost:3001/task/new\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    });\n    console.log(\"dasddddddddddddddddddd\");\n    // const data = await response.json();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"formContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Write your tasks!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Name...\",\n        onChange: event => setAuthor(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Task Description...\",\n        onChange: event => setTask(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        placeholder: \"Complete By Date...\",\n        onChange: event => setDate(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"createItButton\",\n        type: \"submit\",\n        children: \"Create it!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n_s(Form, \"9ZXIfC0JT7MxzO8vpxUz2ZuHslY=\");\n_c = Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["useState","Form","props","author","setAuthor","task","setTask","date","setDate","submitHandler","event","preventDefault","data","console","log","setAllTasks","allTasks","response","fetch","method","headers","body","JSON","stringify","target","value"],"sources":["C:/Users/baile/Documents/github clones/toDoList/front-end/src/components/form.js"],"sourcesContent":["import { useState } from \"react\"\r\n\r\nexport default function Form (props){\r\n    const [author, setAuthor] = useState()\r\n    const [task, setTask] = useState()\r\n    const [date, setDate] = useState()\r\n    \r\n    async function submitHandler(event){\r\n        event.preventDefault()\r\n        const data = { \"authorName\":author, \"task\":task, \"date\":date};\r\n        console.log(data);\r\n        console.log(author)\r\n        props.setAllTasks(allTasks + 1)\r\n        const response = await fetch(\"http://localhost:3001/task/new\",{\r\n            method: \"POST\",\r\n            headers: {\"Content-Type\" : \"application/json\"},\r\n            body: JSON.stringify(data)\r\n        })\r\n        console.log(\"dasddddddddddddddddddd\");\r\n        // const data = await response.json();\r\n        }\r\n\r\n    return (\r\n        <div id=\"formContainer\">\r\n            <form onSubmit={submitHandler}>\r\n                <h2>Write your tasks!</h2>\r\n                <input placeholder=\"Name...\" onChange={(event) => setAuthor(event.target.value) } />\r\n                <input placeholder=\"Task Description...\" onChange= {(event)=> setTask(event.target.value)} />\r\n                <input type = \"date\" placeholder=\"Complete By Date...\" onChange= {(event)=>setDate(event.target.value)} />\r\n                <button id=\"createItButton\"  type=\"submit\">Create it!</button>\r\n            </form>\r\n        </div>\r\n    )}"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAA;AAEhC,eAAe,SAASC,IAAI,CAAEC,KAAK,EAAC;EAAA;EAChC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGJ,QAAQ,EAAE;EACtC,MAAM,CAACK,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,EAAE;EAClC,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,EAAE;EAElC,eAAeS,aAAa,CAACC,KAAK,EAAC;IAC/BA,KAAK,CAACC,cAAc,EAAE;IACtB,MAAMC,IAAI,GAAG;MAAE,YAAY,EAACT,MAAM;MAAE,MAAM,EAACE,IAAI;MAAE,MAAM,EAACE;IAAI,CAAC;IAC7DM,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACjBC,OAAO,CAACC,GAAG,CAACX,MAAM,CAAC;IACnBD,KAAK,CAACa,WAAW,CAACC,QAAQ,GAAG,CAAC,CAAC;IAC/B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgC,EAAC;MAC1DC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAC,cAAc,EAAG;MAAkB,CAAC;MAC9CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACX,IAAI;IAC7B,CAAC,CAAC;IACFC,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;IACrC;EACA;;EAEJ,oBACI;IAAK,EAAE,EAAC,eAAe;IAAA,uBACnB;MAAM,QAAQ,EAAEL,aAAc;MAAA,wBAC1B;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAA0B,eAC1B;QAAO,WAAW,EAAC,SAAS;QAAC,QAAQ,EAAGC,KAAK,IAAKN,SAAS,CAACM,KAAK,CAACc,MAAM,CAACC,KAAK;MAAG;QAAA;QAAA;QAAA;MAAA,QAAG,eACpF;QAAO,WAAW,EAAC,qBAAqB;QAAC,QAAQ,EAAIf,KAAK,IAAIJ,OAAO,CAACI,KAAK,CAACc,MAAM,CAACC,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA,QAAG,eAC7F;QAAO,IAAI,EAAG,MAAM;QAAC,WAAW,EAAC,qBAAqB;QAAC,QAAQ,EAAIf,KAAK,IAAGF,OAAO,CAACE,KAAK,CAACc,MAAM,CAACC,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA,QAAG,eAC1G;QAAQ,EAAE,EAAC,gBAAgB;QAAE,IAAI,EAAC,QAAQ;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAoB;IAAA;MAAA;MAAA;MAAA;IAAA;EAC3D;IAAA;IAAA;IAAA;EAAA,QACL;AACT;AAAC,GA9BkBxB,IAAI;AAAA,KAAJA,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}